2761d2760
< tsize_t t2p_readwrite_pdf_image_tile(T2P* t2p, TIFF* input, TIFF* output, ttile_t tile){
2762a2762
> tsize_t t2p_readwrite_pdf_image_tile(T2P* t2p, TIFF* input, TIFF* output, ttile_t tile){
2899,2900c2899,2925
<                                         int retTIFFReadRawTile;
<                     /* Ignore EOI marker of JpegTables */
---
> 					tsize_t needed_tables = (tsize_t)(count - 2);
> 					tsize_t total_needed;
> 					if (needed_tables < 0 || (tsize_t)~((tsize_t)0) - needed_tables < t2p->tiff_datasize) {
> 						_TIFFfree(buffer);
> 						t2p->t2p_error = T2P_ERR_ERROR;
> 						TIFFError(TIFF2PDF_MODULE,
> 						          "Size overflow while processing JPEG tables for %s",
> 						          TIFFFileName(input));
> 						return(0);
> 					}
> 					total_needed = t2p->tiff_datasize + needed_tables;
> 					if (total_needed > t2p->tiff_datasize) {
> 						unsigned char* newbuf = (unsigned char*)_TIFFrealloc(buffer, total_needed);
> 						if (newbuf == NULL) {
> 							_TIFFfree(buffer);
> 							t2p->t2p_error = T2P_ERR_ERROR;
> 							TIFFError(TIFF2PDF_MODULE,
> 							          "Can't allocate " TIFF_SIZE_FORMAT " bytes of memory "
> 							          "for t2p_readwrite_pdf_image_tile, %s",
> 							          (TIFF_SIZE_T) total_needed,
> 							          TIFFFileName(input));
> 							return(0);
> 						}
> 						buffer = newbuf;
> 					}
> 					int retTIFFReadRawTile;
> 					/* Ignore EOI marker of JpegTables */
2903c2928
<                     /* Store last 2 bytes of the JpegTables */
---
> 					/* Store last 2 bytes of the JpegTables */
2907,2908c2932,2933
<                                         bufferoffset -= 2;
<                                         retTIFFReadRawTile= TIFFReadRawTile(
---
> 					bufferoffset -= 2;
> 					retTIFFReadRawTile= TIFFReadRawTile(
2913,2918c2938,2943
<                                         if( retTIFFReadRawTile < 0 )
<                                         {
<                                             _TIFFfree(buffer);
<                                             t2p->t2p_error = T2P_ERR_ERROR;
<                                             return(0);
<                                         }
---
> 					if( retTIFFReadRawTile < 0 )
> 					{
> 						_TIFFfree(buffer);
> 						t2p->t2p_error = T2P_ERR_ERROR;
> 						return(0);
> 					}
2920,2921c2945,2946
<                     /* Overwrite SOI marker of image scan with previously */
<                     /* saved end of JpegTables */
---
> 					/* Overwrite SOI marker of image scan with previously */
> 					/* saved end of JpegTables */
